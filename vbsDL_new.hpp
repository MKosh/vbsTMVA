#ifndef vbsDL_hpp
#define vbsDL_hpp
//
//Note::Autogenerated with writeDL.sh
//Please check vbsDL*.hpp for available configurations.
//TMVA vars:
//lep1_pt lep1_eta bos_PuppiAK8_pt bos_PuppiAK8_tau2tau1 bos_PuppiAK8_m_sd0_corr vbf2_AK4_eta vbf1_AK4_eta vbf1_AK4_pt vbf2_AK4_pt bosCent zeppLep zeppHad
#include "TMVA/Factory.h"
#include "TMVA/DataLoader.h"
#include "TMVA/Tools.h"
#include "TMVA/Reader.h"
#include "TMVA/TMVAGui.h"
#include "vbsReducedTree.hpp"
//
void   setChainBranches (TChain* inpChain);
//
void setVbsDLorReaderVarsAndSpectators(TMVA::DataLoader* dataloader, TMVA::Reader* datareader, VbsReducedEvent& vbsEvent){

//TMVA spectator 
if(dataloader) dataloader->AddSpectator("L1PFWeight",    "L1PFWeight",   "",      'F');
if(datareader) datareader->AddSpectator("L1PFWeight",    &vbsEvent.L1PFWeight        );
 
//TMVA variable
if(dataloader) dataloader->AddVariable("bosCent", "bosCent", "", 'F');
if(datareader) datareader->AddVariable("bosCent",    &vbsEvent.bosCent        );
 
//TMVA spectator 
if(dataloader) dataloader->AddSpectator("bos_PuppiAK8_eta",    "bos_PuppiAK8_eta",   "",      'F');
if(datareader) datareader->AddSpectator("bos_PuppiAK8_eta",    &vbsEvent.bos_PuppiAK8_eta        );
 
//TMVA variable
if(dataloader) dataloader->AddVariable("bos_PuppiAK8_m_sd0_corr", "bos_PuppiAK8_m_sd0_corr", "", 'F');
if(datareader) datareader->AddVariable("bos_PuppiAK8_m_sd0_corr",    &vbsEvent.bos_PuppiAK8_m_sd0_corr        );
 
//TMVA variable
if(dataloader) dataloader->AddVariable("bos_PuppiAK8_pt", "bos_PuppiAK8_pt", "", 'F');
if(datareader) datareader->AddVariable("bos_PuppiAK8_pt",    &vbsEvent.bos_PuppiAK8_pt        );
 
//TMVA variable
if(dataloader) dataloader->AddVariable("bos_PuppiAK8_tau2tau1", "bos_PuppiAK8_tau2tau1", "", 'F');
if(datareader) datareader->AddVariable("bos_PuppiAK8_tau2tau1",    &vbsEvent.bos_PuppiAK8_tau2tau1        );
 
//TMVA spectator 
if(dataloader) dataloader->AddSpectator("evt",    "evt",   "",      'I');
if(datareader) datareader->AddSpectator("evt",    &vbsEvent.evt        );
 
//TMVA spectator 
if(dataloader) dataloader->AddSpectator("genWeight",    "genWeight",   "",      'F');
if(datareader) datareader->AddSpectator("genWeight",    &vbsEvent.genWeight        );
 
//TMVA variable
if(dataloader) dataloader->AddVariable("lep1_eta", "lep1_eta", "", 'F');
if(datareader) datareader->AddVariable("lep1_eta",    &vbsEvent.lep1_eta        );
 
//TMVA variable
if(dataloader) dataloader->AddVariable("lep1_pt", "lep1_pt", "", 'F');
if(datareader) datareader->AddVariable("lep1_pt",    &vbsEvent.lep1_pt        );
 
//TMVA spectator 
if(dataloader) dataloader->AddSpectator("lep2_pt",    "lep2_pt",   "",      'F');
if(datareader) datareader->AddSpectator("lep2_pt",    &vbsEvent.lep2_pt        );
 
//TMVA spectator 
if(dataloader) dataloader->AddSpectator("nBtag_loose",    "nBtag_loose",   "",      'I');
if(datareader) datareader->AddSpectator("nBtag_loose",    &vbsEvent.nBtag_loose        );
 
//TMVA spectator 
if(dataloader) dataloader->AddSpectator("puWeight",    "puWeight",   "",      'F');
if(datareader) datareader->AddSpectator("puWeight",    &vbsEvent.puWeight        );
 
//TMVA spectator 
if(dataloader) dataloader->AddSpectator("run",    "run",   "",      'I');
if(datareader) datareader->AddSpectator("run",    &vbsEvent.run        );
 
//TMVA variable
if(dataloader) dataloader->AddVariable("vbf1_AK4_eta", "vbf1_AK4_eta", "", 'F');
if(datareader) datareader->AddVariable("vbf1_AK4_eta",    &vbsEvent.vbf1_AK4_eta        );
 
//TMVA variable
if(dataloader) dataloader->AddVariable("vbf1_AK4_pt", "vbf1_AK4_pt", "", 'F');
if(datareader) datareader->AddVariable("vbf1_AK4_pt",    &vbsEvent.vbf1_AK4_pt        );
 
//TMVA variable
if(dataloader) dataloader->AddVariable("vbf2_AK4_eta", "vbf2_AK4_eta", "", 'F');
if(datareader) datareader->AddVariable("vbf2_AK4_eta",    &vbsEvent.vbf2_AK4_eta        );
 
//TMVA variable
if(dataloader) dataloader->AddVariable("vbf2_AK4_pt", "vbf2_AK4_pt", "", 'F');
if(datareader) datareader->AddVariable("vbf2_AK4_pt",    &vbsEvent.vbf2_AK4_pt        );
 
//TMVA variable
if(dataloader) dataloader->AddVariable("zeppHad", "zeppHad", "", 'F');
if(datareader) datareader->AddVariable("zeppHad",    &vbsEvent.zeppHad        );
 
//TMVA variable
if(dataloader) dataloader->AddVariable("zeppLep", "zeppLep", "", 'F');
if(datareader) datareader->AddVariable("zeppLep",    &vbsEvent.zeppLep        );
 
}
//=======================================
//========================================
void setChainBranches (TChain* inpChain){
//
   inpChain->SetBranchStatus("*", 0);   // disable all branches
// switch on required  branches
inpChain->SetBranchStatus("L1PFWeight", 1);
inpChain->SetBranchStatus("bosCent", 1);
inpChain->SetBranchStatus("bos_PuppiAK8_eta", 1);
inpChain->SetBranchStatus("bos_PuppiAK8_m_sd0_corr", 1);
inpChain->SetBranchStatus("bos_PuppiAK8_pt", 1);
inpChain->SetBranchStatus("bos_PuppiAK8_tau2tau1", 1);
inpChain->SetBranchStatus("evt", 1);
inpChain->SetBranchStatus("genWeight", 1);
inpChain->SetBranchStatus("lep1_eta", 1);
inpChain->SetBranchStatus("lep1_pt", 1);
inpChain->SetBranchStatus("lep2_pt", 1);
inpChain->SetBranchStatus("nBtag_loose", 1);
inpChain->SetBranchStatus("puWeight", 1);
inpChain->SetBranchStatus("run", 1);
inpChain->SetBranchStatus("vbf1_AK4_eta", 1);
inpChain->SetBranchStatus("vbf1_AK4_pt", 1);
inpChain->SetBranchStatus("vbf2_AK4_eta", 1);
inpChain->SetBranchStatus("vbf2_AK4_pt", 1);
inpChain->SetBranchStatus("zeppHad", 1);
inpChain->SetBranchStatus("zeppLep", 1);
}
//=============================
#endif
